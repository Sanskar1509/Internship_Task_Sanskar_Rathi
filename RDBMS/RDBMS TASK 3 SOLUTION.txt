								TASK 3

1. Find the Total Number of Orders for Each Customer.

	SELECT c.first_name, c.last_name, COUNT(o.order_id) AS total_orders
	FROM Customers c
	JOIN Orders o ON c.customer_id = o.customer_id
	GROUP BY c.customer_id;

2. Find the Total Sales Amount for Each Product (Revenue per Product)

	SELECT p.product_name, SUM(od.quantity * od.unit_price) AS total_sales
	FROM OrderDetails od
	JOIN Products p ON od.product_id = p.product_id
	GROUP BY p.product_name;

3. Find the Most Expensive Product Sold

	SELECT p.product_name, MAX(od.quantity * od.unit_price) AS highest_sales
	FROM OrderDetails od
	JOIN Products p ON od.product_id = p.product_id
	GROUP BY p.product_name
	ORDER BY highest_sales DESC
	LIMIT 1;

4. Get the List of Customers Who Have Placed Orders in the Last 30 Days.

	SELECT c.first_name, c.last_name, c.email, c.phone, o.order_date
	FROM Customers c
	JOIN Orders o ON c.customer_id = o.customer_id
	WHERE o.order_date >= CURDATE() - INTERVAL 30 DAY;

5. Calculate the Total Amount Paid by Each Customer.

	SELECT concat(c.first_name," ", c.last_name) AS Name, SUM(p.payment_amount) AS total_paid
	FROM Customers c
	JOIN Orders o ON c.customer_id = o.customer_id
	JOIN Payments p ON o.order_id = p.order_id
	GROUP BY c.customer_id;

6. Get the Number of Products Sold by Category.

	SELECT p.category, SUM(od.quantity) AS total_products_sold
	FROM OrderDetails od
	JOIN Products p ON od.product_id = p.product_id
	GROUP BY p.category;

7. List All Orders That Are Pending (i.e., Orders that haven't been shipped yet).

	SELECT o.order_id, c.first_name, c.last_name, o.order_date, o.total_amount, o.order_status
	FROM Orders o
	JOIN Customers c ON o.customer_id = c.customer_id
	WHERE o.order_status = 'Pending';

8. Find the Average Order Value (Total Order Amount / Number of Orders).

	SELECT AVG(o.total_amount) AS average_order_value
	FROM Orders o;


9. List the Top 5 Customers Who Have Spent the Most Money.

	SELECT c.first_name, c.last_name, SUM(p.payment_amount) AS total_spent
	FROM Customers c
	JOIN Orders o ON c.customer_id = o.customer_id
	JOIN Payments p ON o.order_id = p.order_id
	GROUP BY c.customer_id
	ORDER BY total_spent DESC
	LIMIT 5;

10. Find the Products That Have Never Been Sold.

	SELECT p.product_name
	FROM Products p
	WHERE NOT EXISTS (
	    SELECT 1
	    FROM OrderDetails od
	    WHERE od.product_id = p.product_id
	);
